type camera_factory_file, file_type;
type dit_file, file_type;
type dev_ioctl_LaserFocus, dev_type;
type proc_driver_asus_flash, file_type;
type proc_driver_laser_focus, file_type;
type proc_driver_modules, file_type;
type jpeg_device, dev_type;

allow mm-qcamerad factory_file:file { read open getattr lock };
allow mm-qcamerad factory_file:dir { search };
allow mm-qcamerad system_data_file:sock_file { create getattr unlink };
allow mm-qcamerad system_data_file:dir { write remove_name add_name };
allow mm-qcamerad proc:file { write };
allow mm-qcamerad rgb_sensor_device:chr_file { ioctl open write read };
allow mm-qcamerad dev_ioctl_LaserFocus:chr_file { read write open ioctl };
allow mm-qcamerad sensors_socket:sock_file { read };
allow mm-qcamerad proc_driver_laser_focus:file { read open getattr };
allow mm-qcamerad dit_file:sock_file { create getattr unlink setattr };
allow mm-qcamerad debugfs:dir { read };
allow mm-qcamerad dit_file:dir { search write add_name remove_name };
allow mm-qcamerad shell_exec:file { execute read open execute_no_trans getattr };
allow mm-qcamerad toolbox_exec:file { getattr execute execute_no_trans open read };

allow cameraserver system_file:file { lock };
allow cameraserver proc_driver_asus_flash:file { read write open getattr };
allow cameraserver proc_driver_laser_focus:file { read write open getattr };
allow cameraserver proc_driver_modules:file { read write open getattr };
allow cameraserver proc_evtlog:file { append open getattr };
allow cameraserver debug_prop:property_service { set };
allow cameraserver system_prop:property_service { set };
allow cameraserver system_data_file:sock_file { write };
allow cameraserver mm-qcamerad:unix_stream_socket { connectto };
allow cameraserver jpeg_device:chr_file { read write open ioctl };
allow cameraserver dit_file:dir { search write add_name remove_name };
allow cameraserver dit_file:sock_file { write };

allow perfd cameraserver:process { signull };

binder_call(qti_init_shell, surfaceflinger)

# For PixelMaster (/system/priv-app/)
type camera_app, domain, domain_deprecated, mlstrustedsubject;
app_domain(camera_app)

allow camera_app app_data_file:file { execute };
allow camera_app activity_service:service_manager { find };
allow camera_app display_service:service_manager { find };
allow camera_app network_management_service:service_manager { find };
allow camera_app connectivity_service:service_manager { find };
allow camera_app appops_service:service_manager { find };
allow camera_app mount_service:service_manager { find };
allow camera_app sensorservice_service:service_manager { find };
allow camera_app accessibility_service:service_manager { find };
allow camera_app device_policy_service:service_manager { find };
allow camera_app user_service:service_manager { find };
allow camera_app trust_service:service_manager { find };
allow camera_app power_service:service_manager { find };
allow camera_app surfaceflinger_service:service_manager { find };
allow camera_app input_method_service:service_manager { find };
allow camera_app assetatlas_service:service_manager { find };
allow camera_app graphicsstats_service:service_manager { find };
allow camera_app audio_service:service_manager { find };
allow camera_app usb_service:service_manager { find };
allow camera_app cameraserver_service:service_manager { find };
allow camera_app content_service:service_manager { find };
allow camera_app input_service:service_manager { find };
allow camera_app notification_service:service_manager { find };
allow camera_app drmserver_service:service_manager { find };
allow camera_app location_service:service_manager { find };
allow camera_app mediaserver_service:service_manager { find };
allow camera_app mediaextractor_service:service_manager { find };
allow camera_app audioserver_service:service_manager { find };
allow camera_app mediacodec_service:service_manager { find };
allow camera_app permission_service:service_manager { find };

allow camera_app jpeg_device:chr_file { read write open ioctl };
allow camera_app dit_file:dir { search };
allow camera_app dit_file:sock_file { write };
allow camera_app mm-qcamerad:unix_stream_socket { connectto };

allow mediadrmserver firmware_file:dir { search };

allow camera_app media_rw_data_file:file { open create write unlink };
allow camera_app media_rw_data_file:dir { search getattr read open write add_name remove_name };
